version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: airsense-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - FRONTEND_URL=http://localhost:3000
      - DB_PATH=/app/database/air_quality.db
    volumes:
      - backend_data:/app/database
      - backend_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - airsense-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: airsense-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:5000/api
      - NEXT_PUBLIC_APP_NAME=AirSense
      - NEXT_PUBLIC_APP_VERSION=1.0.0
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - airsense-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: airsense-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - airsense-network

volumes:
  backend_data:
    driver: local
  backend_logs:
    driver: local

networks:
  airsense-network:
    driver: bridge
